{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","task_api_url","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","this","console","log","fetch","then","response","json","data","setState","catch","window","alert","e","target","name","value","preventDefault","url","method","headers","body","JSON","stringify","error","task","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0c79878.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.task_api_url = \"\"\n    this.state = {\n      todoList:[],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this); //@\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchTasks();\n  }\n\n  fetchTasks(){\n    console.log(\"Fetching latest data from server:\" + this.task_api_url);\n    fetch(this.task_api_url+\"/api/task-list\")\n      .then(response => response.json())\n      .then(data => this.setState(\n        {todoList: data}\n    )).catch(()=>{\n      window.alert(\"Connection to server failed.\");\n    });\n  }\n\n  handleChange(e){\n    //Trigger when the form is changed\n    var name = e.target.name;\n    var value = e.target.value;\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem, //@ Update Child state\n        title:value,\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    var url = this.task_api_url+\"/api/task-create\";\n\n    //Change API URL in case of editing.\n    if (this.state.editing){\n      url = this.task_api_url+`/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false\n      })\n    }\n\n    //Send POST request to create/edit a task\n    fetch(\n      url,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n        },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response)=>{\n      this.fetchTasks();\n      //Reset the activeItem's state @\n      this.setState({\n        activeItem: {\n          id: null,\n          title: \"\",\n          completed: false\n        },\n      });\n    }).catch((error) =>{\n        window.alert(error);\n    })\n  }\n\n  startEdit(task){\n    console.log(\"Start edit:\", task);\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task){\n    var url =  this.task_api_url+ `/api/task-delete/${task.id}/`\n    fetch(\n      url,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n      }\n    }).then((response)=>{\n      //Update the list.\n      this.fetchTasks();\n    }).catch((error)=>{\n      window.alert(error);\n    })\n  }\n\n  strikeUnstrike(task){\n    console.log(\"Strike/Unstrike\");\n    task.completed = !task.completed\n    var url = this.task_api_url+`/api/task-update/${task.id}/`\n    fetch(\n      url,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n        },\n        body: JSON.stringify({\n          completed: task.completed,\n          title: task.title\n        }),\n    }).then((response)=>{\n      //Update the list.\n      this.fetchTasks();\n    }).catch((error)=>{\n      window.alert(error);\n    })\n  }\n\n  //Django's CSRFToken request: https://docs.djangoproject.com/en/3.1/ref/csrf/ @\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  render(){\n    var tasks = this.state.todoList;\n    var self = this;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{flex: 6}}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" type=\"text\" value={this.state.activeItem.title} name=\"title\" placeholder=\"Add task\" />\n                </div>\n\n                <div style={{flex: 1}}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"submit\" name=\"Add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n          {tasks.map(function(task, i){\n            return(\n              <div key={i} className=\"task-wrapper flex-wrapper\">\n                <div onClick={()=>self.strikeUnstrike(task)}  style={{flex: 7}}>\n                  {task.completed? (\n                    <strike>{task.title}</strike>\n                  ):(\n                    <span>{task.title}</span>\n                  )}\n                </div>\n\n                <div style={{flex: 1}}>\n                  <button onClick={()=>self.startEdit(task)} className=\"btn btn-small btn-outline-info\">Edit</button>\n                </div>\n\n                <div style={{flex: 1}}>\n                  <button onClick={()=>self.deleteItem(task)} className=\"btn btn-small btn-outline-dark delete\">-</button>\n                </div>\n              </div>\n            )\n          })}\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
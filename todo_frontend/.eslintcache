[{"/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/index.js":"1","/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/App.js":"2","/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/reportWebVitals.js":"3"},{"size":500,"mtime":1607621238568,"results":"4","hashOfConfig":"5"},{"size":5628,"mtime":1607641787231,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607621238569,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1shrc58",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/index.js",[],["17","18"],"/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/App.js",["19"],"import React from \"react\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      todoList:[],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this); //@\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchTasks();\n  }\n\n  fetchTasks(){\n    console.log(\"Fetching...\");\n    fetch(\"http://127.0.0.1:8000/api/task-list\")\n      .then(response => response.json())\n      .then(data => this.setState(\n        {todoList: data}\n      ));\n  }\n\n  handleChange(e){\n    //Trigger when the form is changed\n    var name = e.target.name;\n    var value = e.target.value;\n    console.log(value);\n    console.log(name);\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem, //@ Update Child state\n        title:value,\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    window.alert(\"Hello\");\n    var url = \"http://127.0.0.1:8000/api/task-create\";\n\n    //Change API URL in case of editing.\n    if (this.state.editing){\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false\n      })\n    }\n\n    //Send POST request to create/edit a task\n    fetch(\n      url,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n        },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response)=>{\n      this.fetchTasks();\n      //Reset the activeItem's state @\n      this.setState({\n        activeItem: {\n          id: null,\n          title: \"\",\n          completed: false\n        },\n      });\n    }).catch((error) =>{\n        window.alert(error);\n    })\n  }\n\n  startEdit(task){\n    console.log(\"Start edit:\", task);\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task){\n    var url = `http://127.0.0.1:8000/api/task-delete/${task.id}/`\n    fetch(\n      url,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n      }\n    }).then((response)=>{\n      //Update the list.\n      this.fetchTasks();\n    }).catch((error)=>{\n      window.alert(error);\n    })\n  }\n\n  strikeUnstrike(task){\n    console.log(\"strikeUnstrike\");\n    task.completed = !task.completed\n    console.log(task.completed);\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}/`\n    fetch(\n      url,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\":\"application/json\",\n          \"X-CSRFToken\": this.getCookie(\"csrftoken\"),\n        },\n        body: JSON.stringify({\n          completed: task.completed,\n          title: task.title\n        }),\n    }).then((response)=>{\n      //Update the list.\n      this.fetchTasks();\n    }).catch((error)=>{\n      window.alert(error);\n    })\n  }\n\n  //Django's CSRFToken request: https://docs.djangoproject.com/en/3.1/ref/csrf/ @\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  render(){\n    var tasks = this.state.todoList;\n    var self = this;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{flex: 6}}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" type=\"text\" value={this.state.activeItem.title} name=\"title\" placeholder=\"Add task\" />\n                </div>\n\n                <div style={{flex: 1}}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"submit\" name=\"Add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n          {tasks.map(function(task, i){\n            return(\n              <div key={i} className=\"task-wrapper flex-wrapper\">\n                <div onClick={()=>self.strikeUnstrike(task)}  style={{flex: 7}}>\n                  {task.completed? (\n                    <strike>{task.title}</strike>\n                  ):(\n                    <span>{task.title}</span>\n                  )}\n                </div>\n\n                <div style={{flex: 1}}>\n                  <button onClick={()=>self.startEdit(task)} className=\"btn btn-small btn-outline-info\">Edit</button>\n                </div>\n\n                <div style={{flex: 1}}>\n                  <button onClick={()=>self.deleteItem(task)} className=\"btn btn-small btn-outline-dark delete\">-</button>\n                </div>\n              </div>\n            )\n          })}\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","/Users/Amon/dev-workspace/Django_REST/todo_app/todo_frontend/src/reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":172,"column":94,"nodeType":"28","endLine":172,"endColumn":104},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["31"],["32"],"no-global-assign","no-unsafe-negation"]